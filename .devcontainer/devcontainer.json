{
  // A display name for the container.
  "name": "cash-register",
  // The location of a Dockerfile that defines the contents of the container.
  // The path is relative to the devcontainer.json file.
  "dockerFile": "Dockerfile",
  // On Linux, the container user's UID/GID will be updated to match your local user.
  "updateRemoteUserUID": true,
  // A set of name-value pairs that sets or overrides environment variables for the container.
  "containerEnv": {
    // Timezone
    "TZ": "Europe/Madrid",
    // Default Java Home directory
    "JAVA_HOME": "/opt/sdkman/candidates/java/11.0",
  },
  // An array of additional mount points to add to the container when created.
  "mounts": [
    // VSCode server extensions cache
    "type=volume,source=vscode-server-extensions-cache,target=/home/user/.vscode-server/extensionsCache",
    // SDKMan archives cache
    "type=volume,source=sdkman-archives-cache,target=/opt/sdkman/archives",
    // Maven repository cache
    "type=volume,source=m2-repository-cache,target=/home/user/.m2/repository",
  ],
  // An array of Docker CLI arguments that should be used when running the container.
  "runArgs": [
    // Network sgi-network
    "--network=cashregister-network",
  ],
  // A command string or list of command arguments to run on the host machine before the container is created.
  // The command executes from the workspaceFolder locally.
  "initializeCommand": [
    // Create Docker cashregister-network if it does not already exists
    "/bin/bash",
    "-i",
    "-c",
    "docker network inspect cashregister-network >/dev/null 2>&1 || docker network create --driver bridge cashregister-network",
  ],
  // A command string or list of command arguments to run inside the container after is created.
  // The commands execute from the workspaceFolder in the container.
  // The array syntax will invoke the command directly without using a shell.
  "postCreateCommand": [
    // Install Java and Maven
    "/bin/bash",
    "-i",
    "-c",
    "export JAVA_VERSION=11.0; export JAVA_INSTALL_VERSION=$(sdk list java | grep -o \"${JAVA_VERSION}\\.[0-9\\.]*-tem\" | head -1); sdk install java $JAVA_INSTALL_VERSION || true; ln -s /opt/sdkman/candidates/java/$JAVA_INSTALL_VERSION /opt/sdkman/candidates/java/$JAVA_VERSION; curl -sSL https://raw.github.com/juven/maven-bash-completion/master/bash_completion.bash >> ~/.bashrc;",
  ],
  // Wait for "postCreateCommand" before VS Code connects to the dev container
  "waitFor": "postCreateCommand",
  // Indicates the type of shell VS Code should use to "probe" for user environment variables to use by default
  // while debugging or running a task: none (default), interactiveShell, loginShell, or loginInteractiveShell.
  // Fire ~/.bashrc, ~/.zshrc before starting VS Code processes
  "userEnvProbe": "interactiveShell",
  // An array of extension IDs that specify the extensions that should be installed inside the container when it is created.
  "extensions": [
    // GIT support
    "mhutchie.git-graph",
    "eamodio.gitlens",
    // History support
    "xyz.local-history",
    // Spring boot support
    "pivotal.vscode-boot-dev-pack",
    // JavaDoc
    "madhavd1.javadoc-tools",
    // Java Support
    "dgileadi.java-decompiler",
    "vscjava.vscode-java-pack",
    // XML Support
    "redhat.vscode-xml",
    // Native-ASCII Converter
    "cwan.native-ascii-converter",
    // draw.io
    "hediet.vscode-drawio",
  ],
  // Adds default settings.json values into a container/machine specific settings file.
  "settings": {}
}